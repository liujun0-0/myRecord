1.kubectl version：查看版本
2.kubectl  run：在Kubernetes上运行一个应用程序。
  eg:kubectl run kubernetes-bootcamp --image=docker.io/jocatalin/kubernetes-bootcamp:v1 --port=8080
3.kubectl get deployments：要列出您的部署
4.kubectl proxy：创建一个代理，它可以将通信转发到整个集群范围内的私有网络。代理可以通过按control+c终止，并且在运行时不会显示任何输出。
5.kubectl get nodes：查看集群中的节点
kubectl get - 列表资源
kubectl describe - 显示资源的详细信息
kubectl log - 从容器中的容器打印日志
kubectl exec - 在容器中的容器上执行命令

运行在Kubernetes内部的Pods是一个私有的，隔离的网络。默认情况下，对于同一个kubernetes集群中的其他Pods和运行的服务中是可见的，但外网不可见。
Pod是一个Kubernetes抽象，表示一组一个或多个应用程序容器（如Docker或rkt）以及这些容器的一些共享资源。这些资源包括：
 共享存储，作为卷
 网络，作为唯一的集群IP地址
 有关如何运行每个容器的信息，例如容器映像版本或要使用的特定端口
Pod中的容器共享一个IP地址和端口空间，总是共址和共同调度，并在同一个节点上的共享上下文中运行。

Pod是Kubernetes平台上的原子单元。当我们在Kubernetes上创建一个部署时，这个部署创建了包含容器的Pod（而不是直接创建容器）。每个Pod与其调度的节点绑定，并保持到终止（根据重新启动策略）或删除。如果发生节点故障，则在群集中的其他可用节点上调度相同的Pod。

  



